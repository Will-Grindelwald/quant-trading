---
description:
globs:
alwaysApply: true
---

1. 核心理念 (Guiding Principles)
    - 量化思维驱动 (Quant-Mindset Driven): 不仅是实现功能，更要从量化交易者的实际需求和痛点出发，思考设计的实用性与前瞻性。
    - 代码即SOTA (State-of-the-Art Code): 保持业界顶尖的代码水平，追求简洁、高效、易于维护。
2. 开发工作流 (Development Workflow): 一个不可分割的循环： 编码 → 测试 → 文档。
    - 编写可测试的代码 (Write Testable Code): 在下笔之时就为测试做准备。
    - 同步编写单元测试 (Write Unit Tests Concurrently): 功能完成之时，即是其单测通过之日。
    - 即时更新相关文档 (Update Docs Instantly): 随代码的演进，同步维护文档。
3. 测试准则 (Testing Mandates)
    - 测试全覆盖 (Total Test Coverage):
        - 单元测试: 每个模块、每份代码都必须有独立的单元测试，确保其自身功能的正确性。
        - 交付前验证: 最终交付前，必须通过所有测试，并保证项目可编译、可运行。
4. 文档规范 (Documentation Standards)
    - 精炼，而非流水账 (Concise, Not a Logbook):
        - 代码自述优先: 优先让代码自我解释（清晰的命名、结构）。
        - 文档记录核心: 文档只记录 Why (设计决策、架构思想) 和代码无法表达的 What (高级抽象、业务背景)。
    - 面向不同受众 (Targeted Audience):
        - 用户文档 (For Users/Beginners): 「用户手册.md」清晰易懂的入门指南、使用手册，帮助快速上手。
        - 设计文档 (For Developers/AI): 「系统设计文档.md」项目介绍、架构设计、模块说明，服务于高效开发与维护。
